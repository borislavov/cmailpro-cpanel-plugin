[% PROCESS _ajaxapp_header.tmpl %]
<link rel="stylesheet" type="text/css" href="[% MagicRevision('/yui/tabview/assets/skins/sam/tabview.css') %]" />
<script type='text/javascript' src="[% MagicRevision('/yui/tabview/tabview.js') %]"></script>
<script type="text/javascript">
  var tweakTabs = new YAHOO.widget.TabView('tweaktabs');
</script>
<style type="text/css">
  #find_container {
  float: right;
  margin-left: 6px;
  margin-right: 6px;
  }

  .yui-navset {
  position: static;  /* override tabview.css */
  }
</style>

<style type="text/css">
  div.yui_tabview_scroll_tabs {
  position: relative;  /* IE7 */
  overflow: hidden;
  white-space: nowrap;
  }
  div.yui_tabview_scroll_tabs ul.yui-nav {
  position: relative;
  border-bottom-width: 0 ! important;
  }
  .scroll_button {
  background-color: #7697f0;
  display: inline-block;
  vertical-align: bottom;
  font-size: 11px;
  padding: 0.35em 0.5em;
  height: auto;
  color: #ffffff;
  cursor: pointer;
  }
  .scroll_button:hover {
  background-color: #5677d0;
  }
  div.scroll_button.scrolling,
  .scroll_button.scrolling:hover {
  background-color: #3657b0;
  }
  div.scroll_button.inactive {
  background-color: buttonface;
  color: graytext;
  cursor: default;
  }
  div.scroll_button.inactive:hover {
  background-color: buttonface;
  }
  div.scroll_button.hidden {
  visibility: hidden;
  }

  #left_scroll_button {
  float: left;
  margin: 1px 0.16em 0 0;
  height:18px;
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
  -moz-border-radius-topleft: 6px;
  -moz-border-radius-bottomleft: 6px;
  -webkit-border-top-left-radius: 6px;
  -webkit-border-bottom-left-radius: 6px;
  }
  #right_scroll_button {
  float: right;    
  height:18px;
  margin: 1px 0 0 0.16em;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  -moz-border-radius-topright: 6px;
  -moz-border-radius-bottomright: 6px;
  -webkit-border-top-right-radius: 6px;
  -webkit-border-bottom-right-radius: 6px;
  }

  #scrolling_tabs li.last {
  margin-right: 0 ! important;
  }

  #alltweaks {
  clear:both;
  padding: 0;
  }

  div.help {
  margin: 12px 40px;
  float: none;
  }
</style>

<div class="tweaksettings">
  <div class="" style="align:left;">
    <div id="tweaktabs" class="yui-navset yui-navset-top">
      <div valign="bottom" id="scrolling_tabs_container">
	<div class="yui_tabview_scroll_tabs" id="scrolling_tabs">
	  <ul class="yui-nav" id="yui_tabs">
	    <li class="selected">
	      <a href="#tab_MailDelimiter">
		<em>Available Classes</em>
	      </a>
	    </li>
	    <li>
	      <a href="#tab_assign_package">
		<em>Assign to Package</em>
	      </a>
	    </li>
	    <li>
	      <a href="#tab_assign">
		<em>Assign to Account</em>
	      </a>
	    </li>
	  </ul>
	</div>
      </div> <!-- END TABS -->
      <div id="alltweaks" class="yui-content">
	<div id="tab_MailDelimiter">
 	  <table class="datatable brick" cellspacing="0" cellpadding="5" width="100%" border="0" align="center">
	    <tbody>
	      [% FOREACH class IN ServiceClasses.keys %]
	      <tr class="tdshade[% (loop.count % 2 - 1) * -1 + 1 %]_noborder">
		<td>
		  [% class %]
		  [% IF class == ServiceClass -%]
		  (default)
		  [% END %]
		</td>
		<td>
		  <form action="addon_cgpro_manage_classes_edit.cgi" method="post"  style="float: left;">
		    <input type="hidden" name="class" value="[% class %]" />
		    <input type="submit" value="View/Edit" name="submit" style="float: left;" />
		  </form>
		  [% UNLESS class == 'mailonly' -%]
		  <form action="addon_cgpro_manage_classes_delete.cgi" method="post" style="float: left;">
		    <input type="hidden" name="class" value="[% class %]" />
		    <input type="submit" value="Delete" name="submit" />
		  </form>
		  [% END %]
		  [% UNLESS class == ServiceClass -%]
		  <form action="addon_cgpro_manage_classes.cgi" method="post" style="float: left;">
		    <input type="hidden" name="default-class" value="[% class %]" />
		    <input type="submit" value="Set as Default" name="submit" />
		  </form>
		  [% END %]
		</td>
	      </tr>
	      [% END %]
	    </tbody>
	  </table>
	  <form action="addon_cgpro_manage_classes_edit.cgi" method="post">
	    <p>
	      <input type="submit" value="Add New Class" name="submit" />
	    </p>
	  </form>

	</div> <!-- END MailDelimiter -->
	<div id="tab_assign_package">
 	  <table class="datatable brick" cellspacing="0" cellpadding="5" width="100%" border="0" align="center">
	    <tbody id="listedPackages">
	      <tr class="tdshade1_noborder">
		  <td nowrap="nowrap" clspan="2">
		    Could not fetch available packages.
		  </td>
	      </tr>
	    </tbody>
	  </table>
	</div> <!-- END Assing to Packages -->
	<div id="tab_assign">
 	  <table class="datatable brick" cellspacing="0" cellpadding="5" width="100%" border="0" align="center">
	    <thead>
	      <tr class="tdshade1_noborder">
		  <td nowrap="nowrap" align="RIGHT" style="width: 30%;">
		    Please type in an existing account username: <br />
		  </td>
		  <td nowrap="nowrap">
		      <input type="text" name="domain" value="" id="searchfield" />
		  </td>
	      </tr>
	    </thead>
	    <tbody id="listedAccounts">
	    </tbody>
	  </table>
	</div> <!-- END Assing -->
      </div>

    </div>
  </div>
</div>
[% PROCESS addon_cgpro_footer.tmpl %]
[% PROCESS _ajaxapp_footer.tmpl %]
<script type="text/javascript">
      //
function build_packages_table_markup(resp) {
      var text = "";
      var i = 0;
      for ( i = 0; i < resp.package.length; i++) {
	  text = text + '<tr  class="tdshade' + ( i % 2 ? 2 : 1 ) + '_noborder">';
	  text = text + '<td>';
	  text = text + resp.package[i].name;
	  text = text + '</td>';
	  text = text + '<td>';
	  text = text + '<form action="addon_cgpro_manage_classes_assign_package.cgi" method="post">';
	  text = text + '<input type="hidden" name="package" value="' + resp.package[i].name + '" />';
	  text = text + '<input type="submit" name="submit" value="Manage Classes" />';
	  text = text + '</form>';
	  text = text + '</td>';
	  text = text + '</tr>';
      }
      text = text + '<tr  class="tdshade' + ( i % 2 ? 2 : 1 ) + '_noborder">';
      text = text + '<td>';
      text = text + 'default';
      text = text + '</td>';
      text = text + '<td>';
      text = text + '<form action="addon_cgpro_manage_classes_assign_package.cgi" method="post">';
      text = text + '<input type="hidden" name="package" value="default" />';
      text = text + '<input type="submit" name="submit" value="Manage Classes" />';
      text = text + '</form>';
      text = text + '</td>';
      text = text + '</tr>';
      return text;
};

function build_accounts_table_markup(resp) {
      var text = "";
      var i = 0;
      for ( i = 0; i < resp.acct.length; i++) {
	  text = text + '<tr  class="tdshade' + ( i % 2 ? 1 : 2 ) + '_noborder">';
	  text = text + '<td>';
	  text = text + resp.acct[i].user;
	  text = text + '</td>';
	  text = text + '<td>';
	  text = text + '<form action="addon_cgpro_manage_classes_assign.cgi" method="post">';
	  text = text + '<input type="hidden" name="account" value="' + resp.acct[i].user + '" />';
	  text = text + '<input type="submit" name="submit" value="Manage Classes" />';
	  text = text + '</form>';
	  text = text + '</td>';
	  text = text + '</tr>';
      }
      return text;
};
//  sending request
var url = CPANEL.security_token + ("/json-api/listpkgs");
var callback = {
    success : function(o) {
	var resp = null, data = null, err;
	try {
	    resp = YAHOO.lang.JSON.parse(o.responseText);
	}
	catch(e) {
	    try { console.warn(o.responseText,e) } catch(e) {}
	    err = LOCALE.maketext("The API response could not be parsed.");
	}
	if (resp) {
	    YAHOO.util.Dom.get("listedPackages").innerHTML = build_packages_table_markup(resp);
	}
    },
    failure : function(o) { }
};
YAHOO.util.Connect.asyncRequest("GET", url, callback, "");

YAHOO.util.Event.addListener("searchfield", "keyup", function () {
	var text = YAHOO.util.Dom.get("searchfield").value;
	if (text.length > 2) {
	    var url2 = CPANEL.security_token + ("/json-api/listaccts?searchtype=user&search=" + text);
	    var callback2 = {
		success : function(o) {
		    var resp = null, data = null, err;
		    try {
			resp = YAHOO.lang.JSON.parse(o.responseText);
		    }
		    catch(e) {
			try { console.warn(o.responseText,e) } catch(e) {}
			err = LOCALE.maketext("The API response could not be parsed.");
		    }
		    if (resp) {
			YAHOO.util.Dom.get("listedAccounts").innerHTML = build_accounts_table_markup(resp);
		    }
		},
		failure : function(o) { }
	    };
	    YAHOO.util.Connect.asyncRequest("GET", url2, callback2, "");
	}
    });
  
</script>
[% USE JSON %]
