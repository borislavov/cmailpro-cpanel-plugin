#!/usr/bin/perl

use CLI;

my %OPTS = @ARGV ;

@rightslist = ("DomainAccessModes","AutoSignup","ExternalOnProvision","TrailerText","WebBanner","WebSitePrefix","Foldering","FolderIndex","RenameInPlace","AllWithForwarders","MailToAllAction","ExternalOnUnknown","MailToUnknown","MailRerouteAddress","SignalToUnknown","SignalRerouteAddress","AccessToUnknown","AccessRerouteAddress","CentralDirectory","CertificateType","KerberosKeys","RelayAddress","ForceSMTPAuth","recipientStatus","ServiceClasses","CanCreateAccounts","CanCreateGroups","CanCreateForwarders","CanCreateNamedTasks","CanCreateLists","CanAccessLists","CanCreateAliases","CanCreateTelnums","CanPostAlerts","CanAdminSubDomains","CanModifySkins","CanModifyPBXApps","CanAccessMailboxes","CanAccessWebSites","CanControlCalls","CanCreateWebUserSessions","CanImpersonate","CanControlAirSync","CanCreditAccounts","CanChargeAccounts","CanChargeReserves","ServiceClass","BasicSettings","PSTNSettings","WebUserSettings","UseAppPassword","PWDAllowed","PasswordEncryption","RequireAPOP","UseKerberosPassword","UseCertificateAuth","UseSysPassword","OSUserName","UseExtPassword","LogLogin","FailedLoginFlows","AccessModes","MailInpFlow","MailOutFlow","MaxMessageSize","MaxMailOutSize","MailToAll","AddMailTrailer","QuotaNotice","QuotaAlert","QuotaSuspend","RulesAllowed","RPOPAllowed","MaxAccountSize","MaxMailboxes","DefaultMailboxType","MaxSignalContacts","SignalRulesAllowed","CallsLimit","CallLogs","DialogInfo","CallInpFlow","CallOutFlow","RSIPAllowed","AirSyncAllowed","MaxRosterItems","IMLogs","NotifyOutFlow","MaxWebSize","MaxFileSize","MaxWebFiles","AddWebBanner","DefaultWebPage");

sub postmaster_pass {
my $file = "/var/CommuniGate/Accounts/postmaster.macnt/account.settings";
my %hash;
open (MYFILE, "$file");
while (<MYFILE>) {
        chomp;
        my @line = split("=",$_);
        $hash{@line[0]} = @line[1];
 }
if ($hash{' Password '} =~ /^ ".*";$/) {
          return  substr $hash{' Password '}, 2, length($hash{' Password '})-4;
} else {
          return  substr $hash{' Password '}, 1, length($hash{' Password '})-2;
}
}

sub print_env {
open(FILE,">>/tmp/cgp.log");
foreach $key (sort keys(%ENV)) {
  print FILE "$key = $ENV{$key} \n";
}
foreach $key (sort keys(%OPTS)) {
  print FILE "$key = $OPTS{$key} \n";
}
close(FILE);
}

my $CGServerAddress = "127.0.0.1";
my $PostmasterLogin = 'postmaster';
my $PostmasterPassword = postmaster_pass();
my $user=$OPTS{'user'};
my $domain=$OPTS{'domain'};
my $pass=$OPTS{'pass'};

my $cli = new CGP::CLI( { PeerAddr => $CGServerAddress,
                            PeerPort => 106,
                            login => $PostmasterLogin,
                            password => $PostmasterPassword } );
  unless($cli) {
   print MYFILE "Can't login to CGPro: ".$CGP::ERR_STRING,"\n";
   die("Can't login to CGPro: ".$CGP::ERR_STRING);
}

$cli->CreateDomain("$domain");
my $UserData;
@$UserData{'Password'}=$pass;
@$UserData{'ServiceClass'}="mailonly";
#$cli->CreateAccount(accountName => "$user\@$domain", settings => $UserData);
#$cli->CreateMailbox("$user\@$domain", "Calendar");
#$cli->SetAccountRights($account, \@rightslist);
$cli->Logout();

