[%
USE Api2;
USE CPList;
USE HTTP;
USE JSON;

SET nvdata_json = Api2.exec( 'NVData', 'get', { names => 'latest_visitors' } ).0.value;
IF nvdata_json;
    SET nvdata = JSON.parse(nvdata_json);
END;

SET last_apache_hits = Api2.exec( 'Stats', 'lastapachehits', {
    domain              => CPANEL.FORM.domain,
    ssl                 => CPANEL.FORM.ssl,
    api2_sort           => 1,
    api2_sort_column_1  => 'line',
    api2_sort_method_1  => 'numeric',
    api2_sort_reverse_1 => 1,
} );

SET total_bytes = 0;

#a kludge, useful until locale.datetime() supports timezones
FOR hit = last_apache_hits;
    SET match = hit.tz.match('([-+]?)([0-9]{2})([0-9]{2})');
    hit.tz_adjusted_timestamp = hit.timestamp + ( match.0 == '-' ? -1 : 1 ) * ( match.1 * 3600 + match.2 * 60 );
END;
SET adjusted_timestamp2locale = locale.get_lookup_hash_of_mutli_epoch_datetime( last_apache_hits.ofeach('tz_adjusted_timestamp'), 'datetime_format_short' );

FOR hit = last_apache_hits;
    hit.localtime = adjusted_timestamp2locale.${hit.tz_adjusted_timestamp};
    hit.delete('tz_adjusted_timestamp');
    total_bytes = total_bytes + hit.size;  #this needs to stay in after the "kludge" stuff is removed
END;
-%]


<link rel="stylesheet" href="/yui/assets/skins/sam/datatable.css" type="text/css" />
<script type="text/javascript" src="[% MagicRevision('/yui/dragdrop/dragdrop.js') -%]"></script>
<script type="text/javascript" src="[% MagicRevision('/yui/data/data.js') -%]"></script>
<script type="text/javascript" src="[% MagicRevision('/cjt/datatable.js') -%]"></script>
<style type="text/css">

.yui-skin-sam .yui-dt td {
    text-align: center;
}
.yui-skin-sam .yui-dt td.long_string {
    text-align: left;
}
.yui-skin-sam .yui-dt td.numeric_data {
    text-align: right;
}
.yui-skin-sam th.yui-dt-sortable .yui-dt-label {
    margin-right: 0;
}
.yui-skin-sam th.yui-dt-asc .yui-dt-label,
.yui-skin-sam th.yui-dt-desc .yui-dt-label {
    text-align: center;
    display: block;
}
.yui-skin-sam .yui-dt th, .yui-skin-sam .yui-dt th a {
    vertical-align: middle;
}
.yui-skin-sam .yui-dt th .yui-dt-liner {
    white-space: normal;
}

body {
    font-family: Helvetica, Arial, sans-serif;
}
img {
    border:0;
}
p {
    font-size:13px;
    color:#666;
    line-height:19px;
}
a {
    text-decoration:none;
}
.clear {
    clear:both;
}
.container {
    width:722px;
    margin-left:auto;
    margin-right:auto;
    padding-top:20px;
}
.page-heading {
    font-size:16px;
    color:#04586C;
    padding-bottom:5px;
    border-bottom:2px solid #04586C;
}
.data {
    margin-top:0px;
}
.pagination {
    float:right;
    font-size:12px;
    font-weight:bold;
    padding-right:0px;
    display:inline;
    margin-top:30px;
}
.pagination a {
    color:#04586C;
}
.page-link {
    float:left;
    display:inline;
    margin-right:10px;
    padding-top:2px;
}
.page-link a {
    color:#04586C;
}
.number {
    float:left;
    display:inline;
    margin-left:5px;
    margin-right:5px;
}
.number a {
    color:#04586C;
    display:block;
    padding:2px 5px 1px 5px;
}
.number a.current {
    background:url(../images/table/current-page-bfg.png) repeat-x;
    border:1px solid #BCBCBC;
    border-radius:2px;
    -moz-border-radius:2px;
}
.table-section {
    width:723px;
    margin-left:auto;
    margin-right:auto;
    margin-top:5px;
    background:url(../images/table/table-gradient.png) repeat-x #E1E1E1 top;
    border:1px solid #DADADA;
    border-radius:5px;
    -moz-border-radius:5px;
    padding-bottom:20px;
}
.table-top {
    padding:10px;
    background:url(../images/table/border.png) repeat-x bottom;
}
.search {
    float:left;
    border:1px solid #ccc;
    background:url(../images/search-icon.png) no-repeat #fff;
    height:26px;
    width:200px;
    border-radius:7px;
    -moz-border-radius:7px;
}
.reload-count {
    float:right;
    width:242px;
    display:inline;
    margin-top:5px;
}
.search-fld {
    margin-left:25px;
    border: 0;
    padding-top:5px;
    font-family: Helvetica, Arial;
    font-size:13px;
    color:#666;
    font-weight:normal;
    font-style:normal;
}
.search-area {
    float:left;
}
#page_size_changer {
    float:left;
    background:#e5e5e5 url(../images/table/display-non-active.png) repeat-x;
    border: 1px solid #bcbcbc;
    border-radius:7px;
    -moz-border-radius:7px;
    width:130;
}
#page_size_changer ul {
    margin:0px;
    padding:0px;
}
#page_size_changer ul li {
    display:block;
    float:left;
    list-style:none;
    display:inline;
}
#page_size_changer ul li a {
    display:block;
    padding:2px 12px 1px 11px;
    font-size:12px;
    color:#666;
    font-weight:bold;
    border-right:1px solid #bcbcbc;
}
#page_size_changer ul li a.first_current {
    background:url(../images/table/display-active.png) repeat-x;
    border-top-left-radius:6px;
    border-bottom-left-radius:6px;
    -moz-border-radius-topleft:6px;
    -moz-border-radius-bottomleft:6px;
}
#page_size_changer a.mid_not_current,
#page_size_changer a.last_not_current {
    border-left: 1px solid white;
}
#page_size_changer ul li a.mid_current {
    background:url(../images/table/display-active.png) repeat-x;
    border-right:1px solid #bcbcbc;
    padding-left: 12px;
}
#page_size_changer ul li a.last_current {
    padding-left: 12px;
}
#page_size_changer ul li a.last_current,
#page_size_changer ul li a.last_not_current {
    background: none;
    border-right-width: 0;
}

#page_size_changer ul li a.last_current {
    background:url(../images/table/display-active.png) repeat-x;
    border-top-right-radius:6px;
    border-bottom-right-radius:6px;
    -moz-border-radius-topright:6px;
    -moz-border-radius-bottomright:6px;
}

.reload {
    float:left;
    display:inline;
    margin-left:17px;
}
.reload a {
    outline:0;}
.the-table {
    padding-top:0px;
}
.data-info {
    font-size:11px;
    color:#666;
    padding-left:0px;
    float:left;
}
.yui-dt-resizer {
    position:absolute;
    right:0;
    bottom:0;
    height:100%;
    cursor:e-resize;
    cursor:col-resize;
    background-color:#CCC;
    opacity:0;
    filter:alpha(opacity=0);
}
.yui-skin-sam .yui-dt table {
    margin:0;
    padding:0;
    font-family:Helvetica, Arial;
    font-size:inherit;
    border-collapse:separate;
    border-spacing:0;
    border:0;
    width:724px;
}
.yui-skin-sam .yui-dt th, .yui-skin-sam .yui-dt th a {
    font-weight:normal;
    text-decoration:none;
    color:#666;
    font-weight: bold;
    font-size:12px;
    vertical-align:bottom;
}

.yui-skin-sam .yui-dt th {
    margin:0;
    padding-bottom:5px;
    border:0;
    border-right:1px solid #c8c8c8;
    background: none;
}

.yui-skin-sam .yui-dt tr.yui-dt-first td {
    border-top:1px solid #ccc;
}
.yui-skin-sam .yui-dt-liner {
    margin:0;
    color:#666;
    font-size:12px;
}

.yui-skin-sam .yui-dt-coltarget {
    width:3px;
    background-color:#999;
}

.yui-skin-sam .yui-dt td {
    margin:0;
    padding:0;
    border:0;
    border-right:1px solid #dadada;
    border-bottom:1px solid #dadada;
}
.yui-skin-sam .yui-dt td .yui-dt-liner {
    padding: 10px;
    white-space: nowrap;
}
.yui-skin-sam .yui-dt-resizer {
    width:6px;
}
.yui-skin-sam th.yui-dt-asc .yui-dt-liner {
    background:url(/yui/assets/skins/sam/dt-arrow-up.png) no-repeat right;
}

.yui-skin-sam th.yui-dt-desc .yui-dt-liner {
    background:url(/yui/assets/skins/sam/dt-arrow-dn.png) no-repeat right;
}

.yui-skin-sam tr.yui-dt-odd,
.yui-skin-sam tr.yui-dt-even td.yui-dt-asc, .yui-skin-sam tr.yui-dt-even td.yui-dt-desc,
.yui-skin-sam tr.yui-dt-odd td.yui-dt-asc, .yui-skin-sam tr.yui-dt-odd td.yui-dt-desc {
    background-color:#F0F0F0;
}

.yui-skin-sam tr.yui-dt-even,
.yui-skin-sam .yui-dt-list tr.yui-dt-even,
.yui-skin-sam .yui-dt-list tr.yui-dt-odd {
    background-color:#FFF;
}

.yui-skin-sam .yui-dt-list tr.yui-dt-even td.yui-dt-asc, .yui-skin-sam .yui-dt-list tr.yui-dt-even td.yui-dt-desc {
    background-color:#EDF5FF;
}

.yui-skin-sam .yui-dt-list tr.yui-dt-odd td.yui-dt-asc, .yui-skin-sam .yui-dt-list tr.yui-dt-odd td.yui-dt-desc {
    background-color:#EDF5FF;
}

.yui-skin-sam th.yui-dt-highlighted, .yui-skin-sam th.yui-dt-highlighted a {
    background-color:#B2D2FF;
}

.yui-skin-sam tr.yui-dt-highlighted, .yui-skin-sam tr.yui-dt-highlighted td.yui-dt-asc, .yui-skin-sam tr.yui-dt-highlighted td.yui-dt-desc, .yui-skin-sam tr.yui-dt-even td.yui-dt-highlighted, .yui-skin-sam tr.yui-dt-odd td.yui-dt-highlighted {
    cursor:pointer;
    background-color:#B2D2FF;
}

.yui-skin-sam .yui-dt-list th.yui-dt-highlighted, .yui-skin-sam .yui-dt-list th.yui-dt-highlighted a {
    background-color:#B2D2FF;
}

.yui-skin-sam .yui-dt-list tr.yui-dt-highlighted, .yui-skin-sam .yui-dt-list tr.yui-dt-highlighted td.yui-dt-asc, .yui-skin-sam .yui-dt-list tr.yui-dt-highlighted td.yui-dt-desc, .yui-skin-sam .yui-dt-list tr.yui-dt-even td.yui-dt-highlighted, .yui-skin-sam .yui-dt-list tr.yui-dt-odd td.yui-dt-highlighted {
    cursor:pointer;
    background-color:#B2D2FF;
}

.yui-skin-sam th.yui-dt-selected, .yui-skin-sam th.yui-dt-selected a {
    background-color:#446CD7;
}

.yui-skin-sam tr.yui-dt-selected td, .yui-skin-sam tr.yui-dt-selected td.yui-dt-asc, .yui-skin-sam tr.yui-dt-selected td.yui-dt-desc {
    background-color:#426FD9;
    color:#FFF;
}

.yui-skin-sam tr.yui-dt-even td.yui-dt-selected, .yui-skin-sam tr.yui-dt-odd td.yui-dt-selected {
    background-color:#446CD7;
    color:#FFF;
}

.yui-skin-sam .yui-dt-list th.yui-dt-selected, .yui-skin-sam .yui-dt-list th.yui-dt-selected a {
    background-color:#446CD7;
}


.yui-skin-sam .yui-dt-list tr.yui-dt-selected td, .yui-skin-sam .yui-dt-list tr.yui-dt-selected td.yui-dt-asc, .yui-skin-sam .yui-dt-list tr.yui-dt-selected td.yui-dt-desc {
    background-color:#426FD9;
    color:#FFF;
}

.yui-skin-sam .yui-dt-list tr.yui-dt-even td.yui-dt-selected, .yui-skin-sam .yui-dt-list tr.yui-dt-odd td.yui-dt-selected {
    background-color:#446CD7;
    color:#FFF;
}
.yui-skin-sam .yui-dt-paginator {
    display:block;
    margin:6px 0;
    white-space:nowrap;
    font-size:40px;
}
.yui-skin-sam .yui-dt-paginator .yui-dt-first, .yui-skin-sam .yui-dt-paginator .yui-dt-last, .yui-skin-sam .yui-dt-paginator .yui-dt-selected {
    padding:2px 6px;
    font-size:40px;
}

.yui-skin-sam .yui-dt-paginator a.yui-dt-first, .yui-skin-sam .yui-dt-paginator a.yui-dt-last {
    text-decoration:none;
}

.yui-skin-sam .yui-dt-paginator .yui-dt-previous, .yui-skin-sam .yui-dt-paginator .yui-dt-next {
    display:none;
}

.yui-skin-sam a.yui-dt-page {
    border:1px solid #CBCBCB;
    padding:2px 6px;
    text-decoration:none;
    background-color:#fff;
}

.yui-skin-sam .yui-dt-selected {
    border:1px solid #fff;
    background-color:#fff;
}

.yui-pg-page {
    padding-left:8px;
    padding-right:8px;
}

.yui-pg-current-page {
    zoom: 1;
    background:#e5e5e5 url(../images/table/current-page-bfg.png) repeat-x;
    border:1px solid #BCBCBC;
    border-radius:3px;
    -moz-border-radius:3px;
    color:#666;
    padding-top:2px;
    padding-bottom:2px;
}
.yui-pg-last {
    padding-left:11px;
    padding-right:0px;
    color:#ccc;
}
.yui-pg-next {
    color:#ccc;
    padding-left:11px;
}
.yui-pg-previous {
    padding-left:11px;
    padding-right:11px;
    color:#ccc;
}
.yui-pg-first {
    color:#ccc;
}
#matches_count {
    padding-left:10px;
    line-height: 30px;
    font-size:11px;
    color:#666;
    float:left;
    font-family:Georgia;
    font-style: italic;
}
.hits_dt_container .yui-data {
    max-width: 50px;
}

#content .body-content, .body-content {
    padding:0px;
    padding-bottom:20px;
}

.yui-skin-sam .yui-dt .yui-dt-hidden {
    border: 0;
    padding: 0;
    width: 0;
}
.yui-skin-sam .yui-dt .yui-dt-hidden * {
    display: none;
}
.yui-skin-sam .yui-dt tr.yui-dt-first td.yui-dt-hidden {
/* As of Safari 5 and Chrome 8, this is needed for WebKit browsers to hide
   table cells correctly; otherwise they get a 1px width. */
    border-top-width: 0;
}
.column_select {
    -moz-border-radius: 10px;
    border-radius: 10px;
    background: url("../images/table/table-gradient.png") repeat-x scroll center top #E1E1E1;
    border: 1px solid #c8c8c8;
    padding: 8px;
    margin-top: 4px;
}
.column_select .bd {
    -moz-border-radius: 5px;
    background-color: white;
    border: 1px solid #dddddd;
    padding: 4px;
}
.column_select input {
    margin-left: 0;
}
.column_select {
    white-space: nowrap;  /* IE 6 needs this */
}
</style>


<div class="body-content">
<div class="container">
<div class="page-heading">[% locale.maketext('Latest visitors to [_1]',CPANEL.FORM.domain) %]</div>

<br />



<div class="data">
<div class="clear">
<div id="big_info_container" class="data-info"></div>

<div id="top_paginator" class="pagination"></div>

</div>

<div class="table-section">

<div class="table-top clear">
<div class="search-area">
<div class="search">
    <input name="textfield" type="text" class="search-fld" id="hits_search" />
</div>
<span id="matches_count"></span>
</div>
<div class="reload-count">


<div id="page_size_changer" class="clear">
<ul>
<li><a [% nvdata.rows_per_page == 25 ? 'class="first_current"' : 'class="first_not_current"' %] href="#" onclick="change_pagination(25,this); return false">25</a></li>
<li><a [% !nvdata.defined('rows_per_page') || nvdata.rows_per_page == 100 ? 'class="mid_current"' : 'class="mid_not_current"' %] href="#" onclick="change_pagination(100,this); return false">100</a></li>
<li><a [% nvdata.rows_per_page == 150 ? 'class="mid_current"' : 'class="mid_not_current"' %] href="#" onclick="change_pagination(150,this); return false">150</a></li>
<li><a [% nvdata.rows_per_page == 0 ? 'class="last_current"' : 'class="last_not_current"' %] href="#" onclick="change_pagination(0,this); return false">[% locale.maketext('All') %]</a></li>
</ul>
</div>

<div class="reload">
<a href="#" onclick="toggle_column_select(this); return false"><img src="[%MagicRevision('../images/gear.png')%]" /></a>
</div>

<!-- pre-load this -->
<img src="../images/reload-animate.gif" style="display:none" id="reload_animate" />
<div class="reload"><a href="#" onclick="DOM.get('reload_image').src = '../images/reload-animate.gif'; location.reload(); return false"><img src="../images/reload-default.png" width="15" height="17" alt="reload" id="reload_image" /></a></div>
</div>

</div>




<div id="hits_dt_container"></div>


</div>

<div class="data2 clear">
<div class="data-info"></div>
<div style="padding-top:15px;margin:0px;padding-bottom:15px;" id="bottom_paginator" class="pagination"></div>
</div>
</div>

<p style="text-align:center"><a href="lastvisit_legacy.html?domain=[% CPANEL.FORM.domain FILTER uri %]&ssl=[% CPANEL.FORM.ssl FILTER uri %]">Click here</a> for the legacy version of this screen, which uses less JavaScript and formats the information differently.</p>

</div>

<div class="return-link"><a href="lastvisitors_landing.html">&larr; [% locale.maketext('Go Back') %]</a></div>
</div>

<script type="text/plain" id="column_select_item_template">
<label><input type="checkbox" {checked_html} onclick="toggle_column('{column_key_html}')" /> {column_name_html}</label><br />
</script>

<script type="text/plain" id="status_code_hover_template">
<abbr title="{string_html}">{code}</abbr>
</script>
<script type="text/plain" id="big_info_template">
<table cellspacing="0" id="big_info_table" style="margin-bottom:20px">
<tr><th style="text-align:left">[% locale.maketext('Reporting period[boolean,_1,:]',1) %]</th><td>{first_time} &nbsp;&ndash;&nbsp; {last_time}</td></tr>
<tr><th style="text-align:left">[% locale.maketext('Total data sent[boolean,_1,:]',1) %]</th><td>{total_data_localized}</td></tr>
</table>
</script>
<script type="text/plain" id="url_template">
<a href="{protocol}://{domain_html}{url_html}">{url_html}</a>
</script>
<script type="text/plain" id="url_template_only_url">
<a href="{url_html}">{url_html}</a>
</script>
<script type="text/plain" id="matches_template">
[% locale.maketext('([_1] records match)','{matches}') %]
</script>


<script type="text/javascript">
YAHOO.util.Event.throwErrors = true;
var nvdata = [% nvdata_json || '{}' -%];
var default_column_order = nvdata && nvdata.column_order;

var status_codes = [% HTTP.STATUS_CODES.json() %];

var last_apache_hits = [% last_apache_hits.json() || 'null' -%];

var ip_num_lookup = {};

var _column_select_shown = false;
function toggle_column_select(clicked_el) {
    if ( clicked_el && !_column_select_shown ) {
        var column_select = new YAHOO.widget.Overlay( "column_select", {
            context: [ clicked_el, "tr", "br" ]
        } );

        var row_template = DOM.get("column_select_item_template").text.trim();
        var body_html = data_table.getColumnSet().flat.map( function(c) {
            return YAHOO.lang.substitute( row_template, {
                checked_html:     (c.hidden ? "" : "checked='checked'"),
                column_key_html:  c.key.html_encode(),
                column_name_html: c.label.html_encode()
            } );
        } ).join("");

        DOM.addClass( column_select.element, "column_select" );

        column_select.showEvent.unsubscribe( column_select.showMacGeckoScrollbars, column_select );

        //blackhole this since there is no way to disable it
        column_select.showMacGeckoScrollbars = function() {};

        column_select.hideMacGeckoScrollbars();

        column_select.setBody( body_html );
        column_select.render(clicked_el.parentNode);
        clicked_el.parentNode.insertBefore( column_select.element, clicked_el.nextSibling )

        column_select.show();

        column_select.hideEvent.subscribe( function() {
            //for some reason this is necessary...
            setTimeout( function() { column_select.destroy(); }, 100 );
        } );

        YAHOO.util.Event.on( column_select.element, "mousedown", function(e) {
            YAHOO.util.Event.stopPropagation(e);
        } );
        YAHOO.util.Event.on( document.body, "mousedown", function clicker(e) {
            if (DOM.isAncestor(clicked_el, YAHOO.util.Event.getTarget(e))) return;
            YAHOO.util.Event.removeListener(document.body, "mousedown", clicker);
            toggle_column_select();
        } );

        _column_select_shown = column_select;
    }
    else if (_column_select_shown) {
        _column_select_shown.hide();
        _column_select_shown = false;
    }
};

function toggle_column(key) {
    var column = data_table.getColumn(key);
    if ( column.hidden ) {
        data_table.showColumn(column);
    }
    else {
        data_table.hideColumn(column);
    }
};

var _url_template = DOM.get("url_template").text.trim();
var _url_template_only_url = DOM.get("url_template_only_url").text.trim();
var template_to_use;
//FF4b7 dies on this..?!?
//var form_domain_html = ([% CPANEL.FORM.domain.json() %]).html_encode();
var format_url = function(el,rec,col,d) {
    //if the URL has a colon, then do not prefix protocol nor domain to it
    template_to_use = (d.indexOf("://") === -1) ? _url_template : _url_template_only_url;
    el.innerHTML = YAHOO.lang.substitute( template_to_use, {
        protocol    : "[% CPANEL.FORM.ssl ? 'https' : 'http' %]",
        domain_html : [% CPANEL.FORM.domain.json() %].html_encode(),
        url_html    : d.html_encode()
    } );
};

var status_code_images = {
    2: CPANEL.icons.success,
    4: CPANEL.icons.error,
    5: CPANEL.icons.error
};
var _code_html;
var format_status = function(el,rec,col,d) {
    d = String(d);
    _code_html = d.html_encode();
    el.innerHTML = (status_code_images[d.charAt(0)] || "") + " " + _code_html;
    el.title = status_codes[d] || _code_html;
};

var column_defs = [
    {
        key: "ip",
        label: "[% locale.maketext('IP') %]",
        formatter: "text",
        sortable: true,
        resizeable:true,
        sortOptions: { field: "_ipnum" },
        default_width_is_absolute: true
    },
    {
        key: "url",
        label: "[% locale.maketext('URL') %]",
        formatter: format_url,
        sortable: true,
        resizeable:true,
        className: "long_string"
    },
    {
        key: "localtime",
        label: "[% locale.maketext('Time') %]",
        formatter: "text",
        sortable: true,
        resizeable:true,
        sortOptions: { defaultOrder: "desc", field: "line" },
        default_width_is_absolute: true
    },
    {
        key: "size",
        label: "[% locale.maketext('Size (bytes)') %]",
        formatter: "text",
        sortable: true,
        resizeable:true,
        sortOptions: { defaultOrder: "desc" },
        className: "numeric_data",
        default_width_is_absolute: true
    },
    {
        key: "status",
        label: "[% locale.maketext('Status') %]",
        formatter: format_status,
        sortable: true,
        resizeable: true,
        hidden: true,
        default_width_is_absolute: true
    },
    {
        key: "method",
        label: "[% locale.maketext('Method') %]",
        formatter: "text",
        sortable: true,
        resizeable: true,
        hidden: true,
        default_width_is_absolute: true
    },
    {
        key: "protocol",
        label: "[% locale.maketext('Protocol') %]",
        formatter: "text",
        sortable: true,
        resizeable: true,
        hidden: true,
        default_width_is_absolute: true
    },
    {
        key: "referer",
        label: "[% locale.maketext('Referring URL') %]",
        formatter: "text",
        sortable:true,
        resizeable:true,
        className: "long_string"
    },
    {
        key: "agent",
        label: "[% locale.maketext('User agent') %]",
        formatter: "text",
        sortable: true,
        resizeable: true,
        className: "long_string"
    }
];
if ( default_column_order ) {
    column_defs.sort_by( function(cd) { return default_column_order.indexOf(cd.key) } );
}

if (nvdata && nvdata.hidden_columns) {
    column_defs.forEach(function(c) {
        c.hidden = nvdata.hidden_columns[c.key];
    } );
}

//YUI bug 2529210: DataSource addToCache() needs to store a copy
//so that sorting the data doesn't affect the cache
( function() {
    var test_ds = new YAHOO.util.LocalDataSource( [1,2,3], {maxCacheEntries:1} );
    var response;
    test_ds.sendRequest( "", {success:function(req,resp) { response=resp }} );
    response.results.reverse();

    //if the first item in the response cache is 3, then the cache is
    //being affected by data manipulation after returning the result
    if ( test_ds.getCachedResponse("").results[0] === 3 ) {
        var _addToCache = YAHOO.util.LocalDataSource.prototype.addToCache;
        YAHOO.util.LocalDataSource.prototype.addToCache = function(req,resp) {
            var new_resp = { results: resp.results.slice(0) };
            for ( var key in resp ) {
                if ( key !== "results" ) new_resp[key] = resp[key];
            }
            _addToCache.call(this,req,new_resp);
        };
    }
})();

//this is how the API call gives the data sorted
var api_sort = {
    key: "localtime",
    dir: YAHOO.widget.DataTable.CLASS_DESC
};

var initial_sortedBy = nvdata && nvdata.column_sort;
if ( initial_sortedBy ) {
    initial_sortedBy.dir = YAHOO.widget.DataTable[ ( initial_sortedBy.dir === 'asc' ) ? 'CLASS_ASC' : 'CLASS_DESC' ];
}
else {
    initial_sortedBy = api_sort;
}

var rows_per_page = ("rows_per_page" in nvdata) ? nvdata.rows_per_page : 100;
if (rows_per_page === 0) rows_per_page = last_apache_hits.length;

var paginator = new YAHOO.widget.Paginator( {
    firstPageLinkLabel: "[% locale.maketext('First') %]",
    previousPageLinkLabel: "[% locale.maketext('Previous') %]",
    nextPageLinkLabel: "[% locale.maketext('Next') %]",
    lastPageLinkLabel: "[% locale.maketext('Last') %]",
    rowsPerPage: rows_per_page,
    pageLinks : 5,
    containers:  [ 'top_paginator', 'bottom_paginator' ]
} );

var relative_widths;
var column_count = column_defs.length;
var we_have_useful_nvdata_widths = ("column_widths" in nvdata)
    && ( column_defs.every( function(cd) { return cd.hidden || nvdata.column_widths[cd.key] || nvdata.column_widths[cd.key] === 0 } ) )
;
if ( we_have_useful_nvdata_widths ) {
    relative_widths = {};
    for (var c=0; c<column_count; c++) {
        relative_widths[column_defs[c].key] = nvdata.column_widths[column_defs[c].key];
    }
}

function change_pagination(new_value,link_el) {
    var page_size_changer = DOM.get("page_size_changer");
    var links = DOM.getElementsBy( Boolean, "a", page_size_changer );
    links.forEach( function(lk, index) {
        var html_classes = (index === 0) ? ["first_current","first_not_current"]
            : (index < links.length-1) ? ["mid_current","mid_not_current"]
            : ["last_current","last_not_current"]
        ;
        if ( link_el === lk ) {
            DOM.replaceClass(lk, html_classes[1], html_classes[0]);
        }
        else {
            DOM.replaceClass(lk, html_classes[0], html_classes[1]);
        }
    } );

    nvdata.rows_per_page = new_value;
    CPANEL.nvdata.set( 'latest_visitors', YAHOO.lang.JSON.stringify(nvdata) );

    if (new_value === 0) new_value = paginator.get("totalRecords");
    paginator.setRowsPerPage(new_value);
}

function save_column_widths(dt) {
    nvdata.column_widths = {};
    var columns = dt.getColumnSet().flat;
    for (var c=0; c<columns.length; c++) {
        var cur_column = columns[c];
        if (!cur_column.hidden && cur_column.width) {
            nvdata.column_widths[cur_column.key] = cur_column.width;
        }
    }
    CPANEL.nvdata.set( 'latest_visitors', YAHOO.lang.JSON.stringify(nvdata) );
};

function save_hidden_columns(dt) {
    nvdata.hidden_columns = {};
    dt.getColumnSet().flat.forEach(function(c) {
        nvdata.hidden_columns[c.key] = c.hidden;
    } );
    save_column_widths(dt);  //hiding/showing changes the column widths
};

function make_table() {
    var hits_count = last_apache_hits.length;
    for (var i=0; i<hits_count; i++ ) {
        var d = last_apache_hits[i];
        //use match() here in case a hostname shows up instead of an IP
        var cur_ip = d.ip;
        var ipnum = ( d._ipnum = ip_num_lookup[cur_ip] );
        if ( ipnum === undefined ) {
            var match = cur_ip.match(/\d+/g);
            ipnum = 0;
            if ( match ) {
                while ( match.length ) ipnum = ipnum*256 + parseInt(match.shift());
            }
            d._ipnum = (ip_num_lookup[cur_ip] = ipnum);
        }

        var cur_size = ( d.size = parseInt(d.size) || 0 );
        d.status = parseInt(d.status) || 0;
        d.line = parseInt(d.line) || 0;
    };

    DOM.get("big_info_container").innerHTML = YAHOO.lang.substitute(
        DOM.get("big_info_template").text,
        {
            total_data_localized: [% locale.format_bytes(total_bytes).json() || 'null' %],
            //the dates are sorted in reverse
            first_time: last_apache_hits[ last_apache_hits.length-1 ].localtime,
            last_time:  last_apache_hits[0].localtime
        }
    );

    var data_object = new YAHOO.util.LocalDataSource( last_apache_hits, {
        maxCacheEntries: 25
    } );

    DOM.setStyle("hits_dt_container", "visibility", "hidden");
    var data_table = new CPANEL.datatable.SearchableDataTable( "hits_dt_container", column_defs, data_object, {
        fixed_width: true,
        search_box: "hits_search",
        default_sortedBy: api_sort,
        paginator: paginator,
        sortedBy: initial_sortedBy,
        initialLoad: false,  //so we can filter by text search
        draggableColumns: true
    } );

    data_table.subscribe( "postRenderEvent", function() {
        DOM.setStyle("hits_dt_container", "visibility", "");
    } );

    var initial_width = data_table.getTableEl().offsetWidth;

    //for old IE (7, 6?)
    data_table.getTableEl().cellSpacing = 0;

    data_table.subscribe( "cellFormatEvent", function( oArgs ) {
        if (!oArgs.el.title) {
            oArgs.el.title = CPANEL.util.get_text_content(oArgs.el);
        }
    } );

    //case 45597: remove hidden table message text so copy/paste doesn't show it
    //YUI case #2529233 documents this publicly
    data_table.subscribe( "tableMsgHideEvent", function() {
        this.getMsgTdEl().firstChild.innerHTML = "";
    } );

    data_table.subscribe("beforeRenderEvent", function() {
        CPANEL.util.set_text_content( "matches_count", YAHOO.lang.substitute( DOM.get("matches_template").text.trim(), { matches: this.getRecordSet().getLength() } ) );
    } );

    data_table.subscribe( "postRenderEvent", function postrender() {
        this.unsubscribe( "postRenderEvent", postrender );
        if ( !relative_widths ) {
            //When NVData does not provide usable column widths,
            //give each column a default width based on the pixel width
            //of its header's longest string.
            relative_widths = {};
            for (var c=0; c<column_count; c++) {
                var cur_liner_el = data_table.getColumn(c).getThLinerEl();
                var longest_word = cur_liner_el.textContent.split(/\s+/).sort_by("!length")[0];
                var span = document.createElement("span");
                CPANEL.util.set_text_content(span,longest_word);
                span.style.position = "absolute";
                span.style.visibility = "hidden";
                cur_liner_el.appendChild( span );
                var min_header_width = span.offsetWidth;
                cur_liner_el.removeChild( span );

                if (column_defs[c].default_width_is_absolute) {
                    var longest_cell = last_apache_hits
                        .map( function(r) { return r[column_defs[c].key] } )
                        .sort_by("!length")[0]
                    ;
                    var cell_liner = data_table.getTdLinerEl({record:data_table.getRecord(0), column:data_table.getColumn(c)});
                    CPANEL.util.set_text_content(span,longest_cell);
                    cell_liner.appendChild(span);
                    var max_data_width = span.offsetWidth;
                    cell_liner.removeChild(span);

                    var absolute_width = {
                        value: 1 + Math.max(min_header_width, max_data_width),
                        absolute: true
                    };
                    relative_widths[column_defs[c].key] = absolute_width;
                }
                else {
                    relative_widths[column_defs[c].key] = min_header_width;
                }
            }
        }

        this.set_width( initial_width, relative_widths );
        save_column_widths(this);

        var search_helper_overlay = new CPANEL.widgets.Text_Input_Helper(
            "hits_search",
            "[% locale.maketext("Search") %]"
        );

        data_table.subscribe( "postRenderEvent", function() {
            search_helper_overlay.align();
        } );
    } );

    //NVData setters
    data_table.subscribe( 'columnReorderEvent', function( column_oldIndex ) {
        nvdata.column_order = this.getColumnSet().keys.map( function(c) { return c.key } );
        CPANEL.nvdata.set( 'latest_visitors', YAHOO.lang.JSON.stringify(nvdata) );
    } );
    data_table.subscribe( 'columnResizeEvent', function() {
        save_column_widths(data_table);
    } );
    data_table.subscribe( 'columnSortEvent', function( column_dir ) {
        dir = ( column_dir.dir === YAHOO.widget.DataTable.CLASS_ASC ) ? 'asc' : 'desc';
        nvdata.column_sort = { key:column_dir.column.key, dir:dir };
        CPANEL.nvdata.set( 'latest_visitors', YAHOO.lang.JSON.stringify(nvdata) );
    } );
    data_table.subscribe( "columnShowEvent", function resizer(oArgs) {
        var widths;
        if ( oArgs.column.width ) {
            widths = {};
            widths[oArgs.column.key] = {
                value: oArgs.column.width,
                absolute: true
            };
        }
        this.set_width( initial_width, widths );
        save_hidden_columns(this);
    } );
    data_table.subscribe( "columnHideEvent", function resizer() {
        this.set_width( initial_width );
        save_hidden_columns(this);
    } );

    data_table.do_text_search();

    return data_table;
}

var data_table;
if ( last_apache_hits && last_apache_hits.length ) {
    data_table = make_table();
}
</script>
<style type="text/css">
.cjt-text-input-helper {
    cursor: default;
}
.cjt-text-input-helper .bd {
    font-family:Georgia, "Times New Roman", Times, serif;
    font-size:13px;
    color:#999;
    font-style:italic;
}
.cjt-text-input-helper {
    display: table;
}
.cjt-text-input-helper .bd {
    display: table-cell;
    vertical-align: middle;
}
</style>
<!--[if lte IE 7]>
<style type="text/css">
    .cjt-text-input-helper .bd {
        position: relative;
        top: 50%;
    }
    .cjt-text-input-helper .cjt-ie-shell {
        position: relative;
        top: -50%;
    }
    .cjt-text-input-helper .bd,
    .cjt-text-input-helper .cjt-ie-shell {
        zoom: 1;  /* to force hasLayout */
    }
</style>
<![endif]-->
