[%
PROCESS '_ajaxapp_header.tmpl';

USE JSON;
USE HTTP;
USE ExpVar;
USE Api2;

SET account = CPANEL.FORM.acct;
SET from_archiving = CPANEL.get_raw_form('archiving');


SET imap_ssl_host = Api2.exec('CommuniGate','getCGProServer', {} ).0;

SET pop3_ssl_host = Api2.exec('CommuniGate','getCGProServer', {} ).0;

SET smtp_ssl_host = Api2.exec('CommuniGate','getCGProServer', {} ).0;



SET ssl_hosts = {
    imap => imap_ssl_host,
    pop3 => pop3_ssl_host,
    smtp => smtp_ssl_host,
};

SET exim_port = execute( 'Chkservd', 'get_exim_ports' ).data().ports;
IF exim_port.size > 1 && exim_port.0 == 25;
	exim_port = exim_port.1; 
ELSE;
	exim_port = exim_port.0;
END;
SET exim_port_ssl = execute( 'Chkservd', 'get_exim_ports_ssl' ).data().ports.0;

SET webmail_settings = execute( 'Email', 'get_webmail_settings', {
    account => CPANEL.FORM.acct,
} ).data();

SET apps = [];
SET non_ssl_mail_server = imap_ssl_host;
SET non_ssl_mail_user   = webmail_settings.user;
SET has_maildir = webmail_settings.has_maildir;

SET proxysubdomains = CPANEL.CPCONF().proxysubdomains && CPANEL.CPCONF().autodiscover_proxy_subdomains;

SET is_unix = CPANEL.ENV.HTTP_USER_AGENT.match('[Ll]inux') || CPANEL.ENV.HTTP_USER_AGENT.match('[Ff]reeBSD');
SET is_mac = CPANEL.ENV.HTTP_USER_AGENT.match('[Mm]acintosh');


SET MACUA = CPANEL.ENV.HTTP_USER_AGENT.replace('_','.');
# Chrome returns  Intel Mac OS X 10_7_4

SET is_at_least_lion = is_mac && MACUA.match('Mac OS X (\d+\.\d+)');
SET is_at_least_lion = is_at_least_lion && (is_at_least_lion.0 >= 10.7);

SET unix_apps = [];

IF proxysubdomains;
unix_apps = unix_apps.merge([
    {
        key => "thunderbird",
        label => "Mozilla Thunderbird®",
        note => "",
        urlgen => "autoconfig",
    },
    {
        key => "kmail",
        label => "KDE Kmail",
        note => "",
        urlgen => "autoconfig",
    }

]);
END;

FOR app = unix_apps;
    app.urls = {};

    IF app.urlgen == 'autoconfig';
        app.urls.autoconfig = 1;
    END;
END;


###### Ugly hack to get a "function" in Template Toolkit.
SET mac_mail_url_ssl = '';  #Set this before calling to get "parameters".
VIEW mac_mail_url;
    BLOCK hash;
        SET imap_host = mac_mail_url_ssl ? ssl_hosts.imap : non_ssl_mail_server;
        SET url_parts = [
            CPANEL.get_raw_form('acct'),
            imap_host,
            exim_port,
            mac_mail_url_ssl,
            has_maildir,
        ];
        IF item.version;
            url_parts.push( item.version );
        END;

        qs = url_parts.join('|') FILTER uri;
        "$cp_security_token/backend/mailappsetup.cgi?$qs";  #the "return"
    END;
END;
###### End ugly hack.

SET mac_apps = [
    {
        key => 'mail.app-10.7',
        version => '10.7',
        label => 'MacOS® Mail.app® for “Lion” (10.7+)',
        note => locale.maketext('[output,strong,IMAP Path Prefix] must be set to [output,strong,INBOX]; otherwise, Mail.app® will not be able to store deleted, draft, or sent mail on the server.'),
        urlgen => "mac",
        open_if_mac => 1,
    }
];

mac_apps = mac_apps.merge(
        [
            {
                key => 'mail.app',
                label => 'MacOS® Mail.app® for “Pre Lion” (10.4+)',
                note => locale.maketext('[output,strong,IMAP Path Prefix] must be set to [output,strong,INBOX]; otherwise, Mail.app® will not be able to store deleted, draft, or sent mail on the server.'),
                urlgen => "mac",
                open_if_mac => 1,
            }
        ]
    );
IF !is_at_least_lion;
    mac_apps = mac_apps.reverse();
END;

IF is_mac;
    SET recommended = locale.maketext('[output,strong,Recommended] version for your operating system.');
    mac_apps.0.note = "${recommended}<br>${mac_apps.0.note}";
END;

IF proxysubdomains;
    mac_apps = mac_apps.merge(
        [
            {
                key => "postbox",
                label => "Postbox®",
                note => "",
                urlgen => "autoconfig",
            }
        ]
    );
END;

FOR app = mac_apps;
    app.urls = {};

    IF app.urlgen == 'autoconfig';
        app.urls.autoconfig = 1;
    ELSIF app.urlgen == 'autodiscover';
        app.urls.autodiscover = 1;
    ELSIF app.urlgen == 'mac';
        mac_mail_url_ssl = 0;
        app.urls.imap = mac_mail_url.print(app);

        mac_mail_url_ssl = 1;
        app.urls.imaps = mac_mail_url.print(app);
    END;
END;

############ Another ugly hack.
SET ms_url_type = 'imap';
SET ms_url_ssl = 0;
VIEW ms_url;
    BLOCK hash;
        SET my_host = ms_url_ssl ? ssl_hosts.$ms_url_type : '';
        "email.reg?" _ HTTP.make_query_string( {
            acct => CPANEL.get_raw_form('acct'),
            type => ms_url_type,
            app  => item.key,
            host => my_host,
            usessl => ms_url_ssl,
        } );
    END;
END;
############ End ugly hack.

SET wlm_url_type = 'imap';
SET wlm_url_ssl = 0;
VIEW wlm_url;
    BLOCK hash;
        SET my_host = wlm_url_ssl ? ssl_hosts.$wlm_url_type : non_ssl_mail_server;
        SET my_port = wlm_url_ssl ? exim_port_ssl : exim_port;
        "$cp_security_token/backend/emailsetup-livemail.cgi?" _ HTTP.make_query_string( {
            acct => CPANEL.get_raw_form('acct'),
            type => wlm_url_type,
            host => my_host,
            usessl => wlm_url_ssl,
            smtpport => my_port,
            archive => from_archiving,
        } );
    END;
END;


SET ms_apps = [];

IF proxysubdomains;
    ms_apps = ms_apps.merge([
        {
            key => "outlook2010"
            label => "Microsoft Outlook 2010® for Windows®",
            note => "",
            urlgen => "autodiscover",
        }
        ]);
END;

ms_apps = ms_apps.merge([
    {
        key => "livemail",
        label => "Windows Live Mail®",
        note => locale.maketext("Make sure to close Windows Live Mail® before running this script. Once the script is completed, it will automatically start Windows Live Mail®."),
        urlgen => "wlm_url",
    }
    ]);

IF proxysubdomains;
    ms_apps = ms_apps.merge([
        {
        key => "outlook2007"
        label => "Microsoft Outlook 2007® for Windows®",
        note => "",
        urlgen => "autodiscover",
        }
   ]);
END;
ms_apps = ms_apps.merge([
    {
        key => "outlook",
        label => "Microsoft Outlook 2000® for Windows®",
        note => "",
        urlgen => "ms_url",
    },
    {
        key => "outlookexpress",
        label => "Microsoft Outlook Express® for Windows®",
        note => "",
        urlgen => "ms_url",
    }
    ]);

FOR app = ms_apps;
    app.urls = {};

    IF app.urlgen == 'autodiscover';
        app.urls.autodiscover = 1;
    ELSE;
        FOR protocol = ['imap','pop3'];
            FOR ssl = [0,1];
                SET new_key = protocol _ ( ssl ? 's' : '' );
                IF app.urlgen == 'ms_url';
                    ms_url_type = protocol;
                    ms_url_ssl = ssl;
                    app.urls.$new_key = ms_url.print(app);
                ELSIF app.urlgen == 'wlm_url';
                    wlm_url_type = protocol;
                    wlm_url_ssl = ssl;
                    app.urls.$new_key = wlm_url.print(app);
                END;
            END;
        END;
     END;
END;

# Put the current detected os on the top of the list
IF is_unix;
    apps = apps.merge(unix_apps);
    apps = apps.merge(mac_apps);
    apps = apps.merge(ms_apps);
ELSIF is_mac;
    apps = apps.merge(mac_apps);
    apps = apps.merge(unix_apps);
    apps = apps.merge(ms_apps);
ELSE;
    apps = apps.merge(ms_apps);
    apps = apps.merge(mac_apps);
    apps = apps.merge(unix_apps);
END;



IF !from_archiving;
    SET protocol_order = [ 'imaps', 'pop3s', 'imap', 'pop3', 'autoconfig', 'autodiscover' ];
ELSE;
    SET protocol_order = [ 'imaps', 'imap', 'autoconfig', 'autodiscover' ];
END;

SET protocol_desc = {
    'autodiscover' = {
        'label' = locale.maketext('Auto Discovery'),
        'hover' = locale.maketext('Microsoft Auto Discovery Protocol')
    },
    'autoconfig' = {
        'label' = locale.maketext('Auto Config'),
        'hover' = locale.maketext('Mozilla Auto Configuration: [output,strong,_1]', '1.1')
    },
    'imaps' = {
        'label' = locale.maketext('IMAP over SSL/TLS'),
        'hover' = locale.maketext('IMAP Mail Protocol over SSL/TLS (IMAPS)')
    },
    'pop3s' = {
        'label' = locale.maketext('POP3 over SSL/TLS'),
        'hover' = locale.maketext('POP3 Mail Protocol over SSL/TLS (POP3S)'),
    }
    'imap' = {
        'label' = locale.maketext('IMAP'),
        'hover' = locale.maketext('IMAP Mail Protocol'),
    }
    'pop3' = {
        'label' = locale.maketext_plain_context('[output,acronym,POP3,Post Office Protocol v3]'),
        'hover' = locale.maketext('POP3 Mail Protocol'),
    }
};
-%]

<style type="text/css">
.h1Title span,
.h1Title div {
    vertical-align: middle;
    line-height: 19px;
}

.h1Title div {
    margin-left: 10px;
}

.description {
    font-style: normal;
}
#auto_config_area {
    margin-bottom: 20px;
}
table.auto_config {
    margin-bottom: 10px;
    margin-left: 20px;
    margin-right: 20px;
    max-width: 660px;
    width: 660px;
}

table.auto_config td {
    vertical-align: top;
}

table.auto_config td.app_name span.label {
    font-weight: bold;
}

table.auto_config td.app_name span.label,
table.auto_config td.app_name img {
    vertical-align: middle;
}
table.auto_config td.app_name img {
    border-width: 0;    /* for IE, even IE 10 */
}

table.auto_config td.links {
}

table.auto_config a {
    display: inline-block;
    padding: 0 0.5em;
}

.note_header {
    font-weight: bold;
}

.caption {
    font-weight: bold;
    text-align: middle;
}

a.secure {
    font-weight: bold;
}

a.insecure {
    font-weight: normal;
}

.not-recommended {
    font-weight: normal;
}

.vertical_half {
    display: inline-block;
    width: 49%;
    margin: 0;
    border: 0;
}

#config_area table {
    border-spacing: 0;
}
.manual_settings_table td {
    padding: 0.5em 0;
}

.manual_settings_table td:first-child {
    font-weight: bold;
    vertical-align: top;
    padding-right: 1em;
}

.manual_settings_table td[colspan] {
    font-weight: normal;
    padding-left: 20px;
    padding-right: 20px;
    text-align: center;
}

.child-note-row td[colspan] {
    padding: 0;
}

.child-note-row td[colspan] div {
    padding: 5px;
}

ul.port_list {
    margin: 0;
    padding-left: 1em;
}

#ssl_settings_area,
#non_ssl_settings_area {
    margin-left: 20px;
    margin-right: 20px;
    width: 290px;
    padding-left: 1em;
    padding-right: 1em;
    padding-top: .5em;
    padding-bottom: .5em;
}

#ssl_settings_area table,
#non_ssl_settings_area table {
    width: 290px;
    max-width: 290px;
}

#ssl_settings_area table td.data,
#non_ssl_settings_area table td.data {
    width: 170px;
    max-width: 170px;
    overflow:hidden;
    word-wrap: break-word; /* Internet Explorer 5.5+ */
    word-break: break-all;
}

#ssl_settings_area table td.notes,
#non_ssl_settings_area table td.notes{
    word-break: normal;
    word-wrap: normal;
}

.preferred-selection {
    background-color: #DFDFDF;
    border: 1px solid #C2C2C2;
}

#ssl_settings_area div.caption,
#non_ssl_settings_area div.caption {
    text-align: center;
}

#ssl_settings_area div.caption:last-child,
#non_ssl_settings_area div.caption:last-child {
    margin-bottom: 10px;
}

.child-note {
    margin-left: 20px;
    width: 400px;
}

#chooser {
    margin-left: 25px;
    margin-right: 25px;
    margin-top: 5px;
    width: 300px;
}

#chooser-divider {
    margin-left: 20px;
    margin-right: 20px;
}

#chooser input,
#chooser label {
    vertical-align: middle;
}

ul.bulleted li {
    list-style-type: disc;
}

ul.bulleted-note li {
    list-style-type: disc;
    padding-bottom: 10px;
}

.body-content h2 {
    margin-left: 0;
}

.child-note-row {
    background-color: #c2c2c2;
}

.cjt-pagenotice-container.description-area {
    margin: 12px 0;
}

.escape-note {
    font-style: italic;
}
</style>

<div class="h1Title">
    <div class="spriteicon_img_mini" id="icon-manageaccounts_mini"></div>
    [% IF !from_archiving %]
    <span>[%locale.maketext('Mail Client Configuration for “[_1]”.',account)%]</span>
    [% ELSE %]
    <span>[%locale.maketext('Archive Mail Client Configuration for “[_1]”.',account)%]</span>
    [% END %]
</div>

[% SET apponehtmllabel = apps.1.label FILTER html %]
[% IF !from_archiving %]
<p class="description">[% locale.maketext('When you access an email account through a desktop email application such as “[_1]”, the email application will require specific information about your email account. You can use the auto-configure options below to attempt to automatically configure your email application. If the available options are not compatible with your application, you will need to use the [output,strong,Manual Settings] information.', apponehtmllabel)%]</p>
[% ELSE %]
<p class="description">[% locale.maketext('When you access an email archive through a desktop email application such as “[_1]”, the email application will require specific information about your email account. You can use the auto-configure options below to attempt to automatically configure your email application. If the available options are not compatible with your application, you will need to use the [output,strong,Manual Settings] information. We provide read-only access to your mail archives via IMAP only.', apponehtmllabel)%]</p>
<div id="pw_notice" class="description-area"></div>
<script>
new CPANEL.widgets.Page_Notice( null, {
    container: "pw_notice",
    level: "info",
    content: "[% locale.maketext('Use your cPanel account password to read email archives via IMAP.') %]"
} );
</script>
[% END %]

    <div id="manual_settings_area">
        <h2>[% locale.maketext('Manual Settings') %]</h2>
        <p class="description">[%locale.maketext('If you do not see an auto-configuration script for your client in the list above, you can manually configure your mail client using the settings below:')%]</p>

        <div id="ssl_settings_area" class="vertical_half preferred-selection">
            <div class="caption">[% locale.maketext('Secure SSL/TLS Settings') %]</div>
            <div class="caption">[% locale.maketext('(Recommended)')%]</div>
            <table class="manual_settings_table">
                <tr>
                    <td>[% locale.maketext('Username:') %]</td>
                    <td class="data">[% non_ssl_mail_user FILTER html %]</td>
                </tr>
                <tr>
                    <td>[% locale.maketext('Password:') %]</td>
                    <td class="escape-note"> [% txt_password %]</td>
                </tr>
                <tr>
                    <td>[% locale.maketext("Incoming Server:") %]</td>
                    <td class="data">[% ssl_hosts.imap FILTER html %]
                        <ul class="port_list">
                            <li>[% locale.maketext('IMAP Port: [_1]',993) %]</li>
                            [% IF !from_archiving %]
                            <li>[% locale.maketext('POP3 Port: [_1]',995) %]</li>
                            [% END %]
                        </ul>
                    </td>
                </tr>
                [% IF !from_archiving %]
                <tr>
                    <td>[% locale.maketext("Outgoing Server:") %]</td>
                    <td class="data">[% ssl_hosts.smtp FILTER html %]
                        <ul class="port_list">
                            <li>[% locale.maketext("SMTP Port: [_1]", exim_port_ssl) %]</li>
                        </ul>
                    </td>
                </tr>
                [% END %]
                <tr>
                    <td colspan="2" class="notes">
                        [% IF !from_archiving %]
                        <div class="small_note">[% locale.maketext("Authentication is required for IMAP, POP3, and SMTP.") %]</div>
                        [% ELSE %]
                        <div class="small_note">[% locale.maketext("Authentication is required for IMAP.") %]</div>
                        [% END %]
                    </td>
                </tr>
            </table>
        </div>
        <div class="vertical_half" id="non_ssl_settings_area">
            <div class="caption">[% locale.maketext('Non-SSL Settings') %]</div>
            <div class="caption not-recommended">[% locale.maketext('(NOT Recommended)')%]</div>
            <table class="manual_settings_table">
                <tr>
                    <td>[% locale.maketext('Username:') %]</td>
                    <td class="data">[% non_ssl_mail_user FILTER html %]</td>
                </tr>
                <tr>
                    <td>[% locale.maketext('Password:') %]</td>
                    <td class="escape-note">[% txt_password %]</td>
                </tr>
                <tr>
                    <td>[% locale.maketext('Incoming Server:') %]</td>
                    <td class="data">[% non_ssl_mail_server FILTER html -%]
                        <ul class="port_list">
                            <li>[% locale.maketext('IMAP Port: [_1]',143) %]</li>
                             [% IF !from_archiving %]
                            <li>[% locale.maketext('POP3 Port: [_1]',110) %]</li>
                            [% END %]
                        </ul>
                    </td>
                </tr>
                 [% IF !from_archiving %]
                <tr>
                    <td>[% locale.maketext("Outgoing Server:") %]</td>
                    <td class="data">[% non_ssl_mail_server FILTER html -%]
                        <ul class="port_list">
                            <li>[% locale.maketext("SMTP Port: [_1]", exim_port) %]</li>
                        </ul>
                    </td>
                </tr>
                [% END%]
                <tr>
                    <td colspan="2" class="notes">
                        [% IF !from_archiving %]
                        <div class="small_note">[% locale.maketext("Authentication is required for IMAP, POP3, and SMTP.") %]</div>
                        [% ELSE %]
                        <div class="small_note">[% locale.maketext("Authentication is required for IMAP.") %]</div>
                        [% END %]
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<p class="description">
    <b>[% locale.maketext('Notes:')%]</b>
    <ul class="bulleted-note">
        <li>[% locale.maketext('IMAP email access coordinates between the server and your mail application. Messages that have been read/deleted/replied to will show up as such, both on the server and in the mail application.') %]</li>
        [% IF !from_archiving %]
        <li>[% locale.maketext('POP3 does not coordinate with the server. Messages marked as read/deleted/replied to in the mail application will not show up as such on the server. This means that future mail downloads with POP3 will show all messages as unread.') %]</li>
        <li>[% locale.maketext('Outgoing mail is sent using SMTP.') %]</li>
        <li>[% locale.maketext('We recommend using POP3 over SSL/TLS or IMAP over SSL/TLS since they provide increased security for your interactions with the remote mail server.') %]</li>
        [% ELSE %]
        <li>[% locale.maketext('We recommend using IMAP over SSL/TLS since it provides increased security for your interactions with the remote mail server.') %]</li>
        [% END %]
    </ul>
</p>

<script id="notices_body_template_secure" type="text/html">
    <p>[% locale.maketext('This will automatically configure “[_1]” with the correct settings for “[_2]”.','{app}','{protocol}') %]</p>
    <ul class="bulleted">
        <li>[% locale.maketext('If you are prompted to open, run, or save this file, choose “Run” or “Open”.') %]</li>
        <li>[% locale.maketext('If your computer asks if you would like to enter the information into the registry, choose “Yes”.') %]</li>
        <li>[% locale.maketext('Use your cPanel account password as the password.') %]</li>
    </ul>
</script>

<script id="notices_body_template_clear" type="text/html">
    <p>[% locale.maketext('This will automatically configure “[_1]” with the correct settings for “[_2]”.','{app}','{protocol}') %]</p>
    <ul class="bulleted">
        <li>[% locale.maketext('If you are prompted to open, run, or save this file, choose “Run” or “Open”.') %]</li>
        <li>[% locale.maketext('If your computer asks if you would like to enter the information into the registry, choose “Yes”.') %]</li>
        <li>[% locale.maketext('Use your cPanel account password as the password.') %]</li>
    </ul>
</script>

<script id="notices_body_template_autoconfig" type="text/html">
    <p>[% locale.maketext("Mail application “[_1]” can automatically detect this email account’s settings.",'{app}') %]</p>
    <ul class="bulleted">
        <li>[% locale.maketext('Choose to set up a new email account in “[_1]”.','{app}') %]</li>
        <li>[% locale.maketext('When “[_1]” prompts you for the email address, enter “[_2]”.','{app}','<code style="word-wrap:break-word">{email}</code>') %]</li>
        <li>[% locale.maketext('Use your cPanel account password as the password.') %]</li>
    </ul>
    <p>[% locale.maketext('If the auto-configuration fails, please set up the account using the manual settings.') %]</p>
</script>

[% PROCESS '_ajaxapp_footer.tmpl' -%]

<script>
var cpDOM = CPANEL.dom;
var EVENT = YAHOO.util.Event;

function register_toggle_notes() {

    for(var item in app_keys) {
        var key = app_keys[item];
        var note = DOM.get(key + "_notes_control");
        if(!note)
            continue;

        var get_handler = function(key) {
            return function() {
                var noteKey = key;
                var noteRowEl = DOM.get(noteKey + "_notes_row");
                var noteEl = DOM.get(noteKey + "_note");
                if(noteRowEl && noteEl) {
                    if(cpDOM.isVisible(noteRowEl)) {
                        var slide = CPANEL.animate.slide_up(noteEl);
                        if (slide) {
                            slide.onComplete.subscribe(function() {
                                cpDOM.hide(noteRowEl);
                            });
                        }
                    } else {
                        cpDOM.show(noteRowEl);
                        CPANEL.animate.slide_down(noteEl);
                    }
                }
            }
        }

        EVENT.on(note, 'click', get_handler(key))
    }

}
/**
 * Show the mail configuration pre-download notice box
 * for the specificed app and protocol.
 * @name show_mail_config_notices
 * @param {string} clicked
 * @param {string} app
 * @param {string} protocol
 * @param {Boolean} secure
 * @param {string} protocolkey
 */
function show_mail_config_notices(clicked, app, protocol, secure, protocolkey) {
    var url = clicked.href;

    var dialog = new CPANEL.ajax.Common_Dialog( "", {
        width: "380px"
    });

    dialog.setHeader(CPANEL.widgets.Dialog.applyDialogHeader("[% locale.maketext('Mail Client Configuration') %]"));

    var template = "";
    if ( (protocolkey === "autodiscover") || (protocolkey === "autoconfig") ) {
        template = DOM.get("notices_body_template_autoconfig").text;
    } else if(secure) {
        template = DOM.get("notices_body_template_secure").text;
    }
    else {
        template = DOM.get("notices_body_template_clear").text;
    }

    var email = [% CPANEL.get_raw_form('acct').json || 'null' %];
    if (!email || !/@/.test(email)) {
        email = "_mainaccount@[% CPANEL.CPDATA.DOMAIN %]";
    }

    dialog.setBody( YAHOO.lang.substitute( template, {
        email: String(email).html_encode(),
        app: app,
        protocol: protocol
    } ) );
    dialog.beforeSubmitEvent.subscribe( function() {
            dialog.hide_to_point(clicked);
            if (protocolkey !== "autodiscover" && protocolkey !== "autoconfig") {
                location.href = url;
            }
        return false;
    } );
    if (protocolkey === "autodiscover" || protocolkey === "autoconfig") {
          dialog.cfg.getProperty("buttons")[0].text = LOCALE.maketext('OK');
          dialog.cfg.getProperty("buttons").pop(); // removes cancel button
    }
    dialog.show_from_source(clicked);
}

/**
 * Initialize the page after the DOM is ready...
 * @name initialize
 */
function initialize() {
    register_toggle_notes();
}

YAHOO.util.Event.onDOMReady(initialize);

</script>
